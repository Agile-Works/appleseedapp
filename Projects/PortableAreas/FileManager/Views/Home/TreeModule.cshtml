
@using MvcContrib;

<script type="text/javascript" src="@Url.Resource("Scripts.jquery.jstree.js")"></script>
<script type="text/javascript" src="@Url.Resource("Scripts.Uploadify.jquery.uploadify-3.1.min.js")"></script>
<link type="text/css" rel="stylesheet" href="@Url.Resource("Scripts.Uploadify.uploadify.css")" />
<link type="text/css" rel="stylesheet" href="@Appleseed.Framework.HttpUrlBuilder.BuildUrl("~/aspnet_client/ContextMenu/jquery.contextMenu.css")" /> 
<link type="text/css" rel="stylesheet" href="@Appleseed.Framework.HttpUrlBuilder.BuildUrl("~/aspnet_client/jQuery/jsTree/themes/default/style.css")" /> 

<script type="text/javascript" src="@Appleseed.Framework.HttpUrlBuilder.BuildUrl("~/aspnet_client/ContextMenu/jquery.contextMenu.js")"></script>
<script type="text/javascript" src="@Appleseed.Framework.HttpUrlBuilder.BuildUrl("~/aspnet_client/ContextMenu/jquery.ui.position.js")"></script>






@*<link type="text/css" rel="stylesheet" href="@Url.Resource("Content.default.style.css")" /> *@



    <div id="MainTree" class="demo">
        

    </div>

<script type= "text/javascript">

    $(function() {
        Refresh();
    });
    


    function Refresh(){
        $("#MainTree")
        .jstree({
            "json_data": {
                "ajax": {
                    "type": "POST",
                    "url": 
                    function (node) {
                        var url = '';
                        if (node == -1) {
                            url = '@Url.Action("GetTreeData")';
                        }
                        else {
                            var nodeId = node.attr('id');
                            url = '@Url.Action("GetChildreenTree")?dir=' + nodeId;
                        }

                        return url;
                    },
                    "data": function (n) {
                        return { ID: n.Attr ? n.Attr("ID") : 0 };
                    }
                }
            },
            "dnd": {
                "drop_target": false,
                "drag_target": false
            },
            
            "core": { "initially_open": ["/Portals"] },

            "plugins": ["themes", "contextmenu", "json_data", "ui", "crrm", "dnd", "core"]
        }).bind("select_node.jstree", function (event, data) {

            var folder = data.rslt.obj.attr("id");
            var folderReplace = folder.replace(/\//g, "\\/");
            $("#MainTree").jstree("open_node", $('#' + folderReplace));

            LoadFoldersContent(folder, true);
            
        });
        

    };

    $('#MainTree').bind("move_node.jstree", function (e, data) {
        data.rslt.o.each(function () {
            $.ajax({
                async: false,
                type: 'POST',
                url: '@Url.Action("MoveData")',
                data: {
                    "path": $(this).attr("id"),
                    "destination": data.rslt.np.attr("id")
                },
                success: function (r) {
                   Refresh();
                },
                error: function (r) {
                    $.jstree.rollback(data.rlbk);
                }
            });
        });
    });


    $('#MainTree').bind("rename.jstree", function(e, data) {
        $.ajax({
            type: 'POST',
            url: '@Url.Action("RenameFolderTree")',
            data: {
                "name": data.rslt.obj.attr("id"),
                "newName": data.rslt.new_name
            },
            success: function(r) {
                Refresh();
            },
            error: function(r) {
                $.jstree.rollback(data.rlbk);
            }
        });
    });

    function LoadFoldersContent(dir, addToPush) {

        $.ajax({
            type: 'POST',
            url: '@Url.Action("ViewFilesFromFolder")',
            data: {
                "folder": dir
            },
            success: function (folderView) {
                $('#FilesTreeFiles').html(folderView);
                if (addToPush) {
                    BackNode++;
                    Backstack[BackNode] = dir;
                    
                    //Backstack.splice(BackNode, Backstack.length - BackNode);
                    
                }
                LastNode = dir;
                $('#dirNameHidden').val(dir);
            }
        });

        $('#dirName').val(dir);

    }


    function OpenFolder(folder) {

        var folderReplace = folder.replace(/\//g, "\\/");
        $("#MainTree").jstree("open_node", $('#' + folderReplace));
        LoadFoldersContent(folder, true);

    }


    var Backstack = new Array();
    //var AheadStack = new Array();
    var LastNode = "/Portals2";
    var BackNode = -1;
    var CopiedFile = '';
    var CopiedFileFolder = '';
    var isCopy = true;
    var isFolder = false;

    function goBack() {

        if (Backstack.length > 0 && BackNode > 0) {
            
            // Backnode apunta a la posicion acutal
            BackNode--;
            var dir = Backstack[BackNode];
            LoadFoldersContent(dir, false);
        }
  
    }
    
    function goNext() {

        if (Backstack.length > 0 && BackNode > -1 && BackNode < Backstack.length -1) {

            // Backnode apunta a la posicion acutal
            BackNode++;
            var dir = Backstack[BackNode];
            LoadFoldersContent(dir, false);
        }

    }
    
    function CreateFolder(Name) {
        //var folderReplace = LastNode.replace(/\//g, "\\/");
        
        
        $.ajax({
            type: 'POST',
            url: '@Url.Action("CreateNewFolder")',
            data: {
                folder: LastNode,
                name: Name
            },
            success: function (folderView) {
                LoadFoldersContent(LastNode);
                CloseNewFolderDialog();
                $('#NewFolderInputId').val('');
            },
            error: function (result) {
                AppendError(result.responseText);
            }
        });



    }

    $(function() {

        $('#FileUpload').uploadify({
            'swf': '@Appleseed.Framework.HttpUrlBuilder.BuildUrl("~/aspnet_client/Uploadify/uploadify.swf")',
            'buttonImage': '@Url.Resource("Content.UploadFile.png")',
            //'buttonText': 'Buscar...',
            'uploader': '@Url.Action("UploadFile")',
            'width': 40,
            //'folder': '/uploads',
            'formData': { 'folderName': ''},
            //'auto': true,
            //'multi': false,
            'onUploadStart': function () {
                $("#FileUpload").uploadify("settings", "formData", { 'folderName': LastNode });
            },
            'onUploadComplete' : function() {
                LoadFoldersContent(LastNode);
            }
        });

        OpenFolder(LastNode);
        

    });
    

    $(function () {
        
       
            
            $.contextMenu({
                selector: '#FilesTreeFiles',
                callback: function (key, options) {
                    var m = "clicked: " + key;
                    window.console && console.log(m) || alert(m);
                },
                items: {
                    "createFolder": {
                        name: "Create Folder",
                        callback: function (key, options) {
                            OpenNewFolderDialog();
                            //$("#uploadifyDialog").dialog("open");
                        }
                    },
                    "upload": {
                        name: "Upload File", icon: "add",
                        callback: function (key, options) {
                            //var m = "upload was clicked";
                            //window.console && console.log(m) || alert(m);
                            $("#uploadifyDialog").dialog("open");
                        }
                    },                

                    "paste": {
                        name: "Paste",
                        icon: "paste",
                        disabled: function (key, opt) {
                            // this references the trigger element
                            return CopiedFile == '';
                        },
                        callback: function (key, options) {
                            PasteFile();
                        }
                    }
                    
                }
            });

        
       
    });
    


    var SelectedFile = '';
    var SelectedFileParentFolder = '';
    var SelectedFolder = '';
    var SelectedFolderParentFolder = '';
    $(function () {

        
        $.contextMenu({
            selector: '.FileIcon',
            callback: function (key, options) {
                var m = "clicked: " + key;
                window.console && console.log(m) || alert(m);
            },
            items: {
                "cut": {
                    name: "Cut",
                    icon: "cut",
                    callback: function (key, options) {
                        CopiedFile = SelectedFile;
                        CopiedFileFolder = SelectedFileParentFolder;
                        isCopy = false;
                        isFolder = false;
                    }
                },
                "copy": {
                    name: "Copy",
                    icon: "copy",
                    callback: function (key, options) {
                        CopiedFile = SelectedFile;
                        CopiedFileFolder = SelectedFileParentFolder;
                        isCopy = true;
                        isFolder = false;
                    }
                },
                "Rename": {
                    name: "Rename",
                    callback: function (key, options) {
                        OpenRenameFileDialog();
                    }
                },
                "sep1": "---------",
                "delete": {
                    name: "Delete", 
                    icon: "delete", 
                    // superseeds "global" callback
                        callback: function(key, options) {
                            DeleteFile();
                        }
                }


            },
            events: {
                show: function (opt) {
                    opt.$trigger.addClass("selectedFile");
                    SelectedFile = opt.$trigger.find(".name").html();
                    SelectedFileParentFolder = opt.$trigger.find("#ParentFolder").val();
                    
                },
                hide: function (opt) {
                    opt.$trigger.removeClass("selectedFile");
                }
            }
        });
        
        $.contextMenu({
            selector: '.FolderIcon',
            callback: function (key, options) {
                var m = "clicked: " + key;
                window.console && console.log(m) || alert(m);
            },
            items: {
                "cut": {
                    name: "Cut",
                    icon: "cut",
                    callback: function (key, options) {
                        CopiedFile = SelectedFolder;
                        CopiedFileFolder = SelectedFolderParentFolder;
                        isCopy = false;
                        isFolder = true;
                    }
                },
                "copy": {
                    name: "Copy",
                    icon: "copy",
                    callback: function (key, options) {
                        CopiedFile = SelectedFolder;
                        CopiedFileFolder = SelectedFolderParentFolder;
                        isCopy = true;
                        isFolder = true;
                    }
                },
                "Rename": {
                    name: "Rename",
                    callback: function (key, options) {
                        OpenRenameFolderDialog();
                    }
                },
                "sep1": "---------",
                "delete": {
                    name: "Delete",
                    icon: "delete",
                    // superseeds "global" callback
                    callback: function (key, options) {
                        DeleteFolder();
                    }
                }


            },
            events: {
                show: function (opt) {
                    opt.$trigger.addClass("selectedFile");
                    SelectedFolder = opt.$trigger.find(".name").html();
                    SelectedFolderParentFolder = opt.$trigger.find("#ParentFolder").val();
                    
                },
                hide: function (opt) {
                    opt.$trigger.removeClass("selectedFile");
                }
            }
        });
       
        //$('.data-title').attr('data-menutitle', 'Peñarol');
    });
    
    function DeleteFolder() {

        if (confirm('Are you sure you want to delete "' + SelectedFolder + '"?')) {
            $.ajax({
                type: 'POST',
                url: '@Url.Action("DeleteFolder")',
                data: {
                    "folder": SelectedFolder,
                    "parentfolder": SelectedFolderParentFolder
                },
                success: function(folderView) {
                    LoadFoldersContent(LastNode);
                    Refresh();
                },
                error: function (result) {
                    AppendError(result.responseText);
                }
            });
        }

    }
    
    function AppendError(msg) {
       
        var errorDiv = '<div class="ui-state-error ui-corner-all" style="padding: 0 .7em;">' +
            '<p><span class="ui-icon ui-icon-alert" style="float: left; margin-right: .3em;"></span>' +
            '<strong>Alert:</strong>' + msg + '</p><span onclick="$(this).parent().remove()">cerrar</span></div>';
        $('#FileManagerErrors').append(errorDiv);
    }

    function RenameFolder() {

        var newFolderName = $('#RenameFolderInputId').val();
        if (newFolderName != '') {

            $.ajax({
                type: 'POST',
                url: '@Url.Action("RenameFolder")',
                data: {
                    "folder": SelectedFolder,
                    "parentFolder": SelectedFolderParentFolder,
                    "newName": newFolderName
                },
                success: function (folderView) {
                    LoadFoldersContent(LastNode);
                    CloseRenameFolderDialog();
                    Refresh();
                    
                }
            });
        } else {

        }

    }
    

    function DeleteFile() {
        if (confirm('Are you sure you want to delete "' + SelectedFile + '"?')) {
            $.ajax({
                type: 'POST',
                url: '@Url.Action("DeleteFile")',
                data: {
                    "file": SelectedFile,
                    "folder": SelectedFileParentFolder
                },
                success: function(folderView) {
                    LoadFoldersContent(LastNode);
                },
                error: function(result) {
                    AppendError(result.responseText);
                }
            });
        }

    }
    
    function RenameFile() {
        
        var newFileName = $('#RenameFileInputId').val();
        if (newFileName != '') {

            $.ajax({
                type: 'POST',
                url: '@Url.Action("RenameFile")',
                data: {
                    "file": SelectedFile,
                    "folder": SelectedFileParentFolder,
                    "name": newFileName
                },
                success: function(folderView) {
                    LoadFoldersContent(LastNode);
                    CloseRenameFileDialog();
                    $('#RenameFileInputId').val('');
                },
                error: function(result) {
                    AppendError(result.responseText);
                }
            });
        } else {
  
        }

    }
    
    function PasteFile() {
        $.ajax({
            type: 'POST',
            url: '@Url.Action("PasteFile")',
            data: {
                "file": CopiedFile,
                "folder": CopiedFileFolder,
                "newFolder": LastNode,
                "isCopy": isCopy,
                "isFolder": isFolder 
            },
            success: function (folderView) {
                LoadFoldersContent(LastNode);
                CopiedFile = '';
            },
            error: function (result) {
                AppendError(result.responseText);
            }
        });

    }
    

</script>
