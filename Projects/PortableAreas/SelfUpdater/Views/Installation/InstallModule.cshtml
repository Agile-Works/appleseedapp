@model List<SelfUpdater.Models.InstallPackagesModel>
    
<table id="available_packages">
    @foreach (var package in Model){ 
    <tr>
        <td>
            <img src="@package.icon" alt="" />
        </td>
        <td>
            @package.name
        </td>
        <td>
            @package.version
        </td>
        <td>
            @package.author
        </td>
        <td>
            <input class="InstallChecker" type="checkbox" />
            <input type="hidden" class="PackageName" value="@package.name"/>
            <input type="hidden" class="PackageSource" value="@package.source"/>
            <input type="hidden" class="PackageVersion" value="@package.version"/>
        </td>
    </tr>
    }
</table>
    
    
<div id="installingDiv" style="display: none">
    <div class="ui-state-highlight ui-corner-all"><span class="ui-icon ui-icon-info" style="float: left; margin-right: .3em;"></span> This may take a few minutes, please wait until this dialog closes.</div>
    <br />
    <ul id="installingUl">
        <li>Starting installation...</li>
    </ul>
    <div id="TestingSignalR"></div><br/>
    <div id="PackagesProgressbar"></div>
</div>

<script type="text/javascript">
    
    
    
    function getCurrentPage() {
        $.ajax({
            type: "GET",
            url: window.location.href,
            success: function () {}
        });
    }


    $(function () {
        
        $("#PackagesProgressbar").progressbar({
            value: 0
        });
        
        var updaterHub = $.connection.selfUpdaterHub;

        var packagesModels = [];

       updaterHub.client.newMessage = function (message) {
            $('#TestingSignalR').append('<span>' + message + '</span><br/>');
            $("#installingDiv").scrollTop($("#installingDiv")[0].scrollHeight);
        };
        
        updaterHub.client.newPercentaje = function (message) {
            var menos = '-';
            var space = ' ';
            // removing space
            if (message.Pct.substring(0, space.length) === space) {
                message.Pct = message.Pct.substring(1, message.Pct.length);
            }
            
            if (packagesModels.length == 0) {
                $('#TestingSignalR').append('<span>' + message.Msg + '</span><br/>');
                var model = { msg: message.Msg, pct: message.Pct, firstNegative: "" };
                packagesModels.push(model);
            }
            else {
                var progressModel = getProgressBarModel(packagesModels, message.Msg);
                if (progressModel != null) {
                    if (message.Pct.substring(0, menos.length) === menos) {
                        var absoluteNumber = Math.abs(message.Pct);
                        if (progressModel.firstNegative == "") {
                            progressModel.firstNegative = absoluteNumber;
                        }
                        var realPercentaje = (progressModel.firstNegative - absoluteNumber) * 2 + 1 + absoluteNumber;
                        message.Pct = realPercentaje;
                    }
                    if (progressModel.msg == message.Msg && progressModel.pct != message.Pct) {
                        $("#installingDiv").scrollTop($("#installingDiv")[0].scrollHeight);
                        //console.log("NuevoPorcentaje: " + message.Msg + ' ' + message.Pct);
                        progressModel.msg = message.Msg;
                        progressModel.pct = message.Pct;
                        var number = Math.abs(message.Pct);
                        $("#PackagesProgressbar").progressbar("option", "value", number);
                        //console.log("El porcentaje :'" + progressModel.pct + "'");
                    }
                   
                }
                else {
                    $('#TestingSignalR').append('<span>' + message.Msg + '</span><br/>');
                    model = { msg: message.Msg, pct: message.Pct, firstNegative: "" };
                    packagesModels.push(model);
                }
            }
        };

        updaterHub.client.reloadPage = function(data) {
            getCurrentPage();
            setTimeout(window.location = window.location.href, 5000);
        };

        updaterHub.client.openPopUp = function (data) {
            $('#installingDiv').dialog("open");
            console.log('SingalR opening pop up');
        };
        
        updaterHub.client.console = function (data) {
            console.log(data);
        };

        $.connection.hub.start().done(function () {
            console.log('SignalR loaded');
        });
        

        $('#installingDiv').dialog({
            modal: true,
            closeOnEscape: false,
            closeText: '',
            resizable: false,
            title: 'Install package',
            width: 550,
            height: 600,
            open: function (event, ui) {
                $(this).closest('.ui-dialog').find('.ui-dialog-titlebar-close').hide();
            },
            autoOpen: false

        });
        
        function getProgressBarModel(array, msg) {
            for (var i = 0; i < array.length; i++) {
                if (array[i].msg == msg) {
                    return array[i];
                }
            }
            return null;
        }

    });


    

</script>